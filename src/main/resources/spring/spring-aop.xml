<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd  
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd  
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">



	<aop:aspectj-autoproxy />
	<aop:config proxy-target-class="true"></aop:config>




	<!-- 启动对@AspectJ注解的支持 -->
	<!-- proxy-target-class等于true是强制使用cglib代理，proxy-target-class默认是false，如果你的类实现了接口 
		就走JDK代理，如果没有，走cglib代理 -->
	<!-- 注：对于单利模式建议使用cglib代理，虽然JDK动态代理比cglib代理速度快，但性能不如cglib -->

	<!--如果不写proxy-target-class="true"这句话也没问题 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->

	<!--切面 -->
	<bean id="LogAspect" class="com.way.aop.LogAspect"></bean>

	<!-- <bean id="methodCacheInterceptor" class="com.way.utils.redis.cache.MethodCacheInterceptor"></bean> 
		需要加入缓存的类或方法 <bean id="methodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" 
		> <property name="advice" ref="methodCacheInterceptor"> </property> <property 
		name="patterns" > <list> 确定正则表达式列表 <value>com\.way\.service\.impl\...*ServiceImpl.*</value 
		> </list> </property> </bean > -->

	<!-- 方式一 -->
	<!-- <aop:config> <aop:pointcut id="redisMethodCachePointcut" expression="execution(* 
		com.way.service..*.*(..))" /> <aop:advisor advice-ref="methodCacheInterceptor" 
		pointcut-ref="redisMethodCachePointcut" /> </aop:config> -->



	<!-- redis 缓存处理 假如更新 删除 新增了 则清楚缓存 -->
	<!--方式二 自定义注解RedisCache redis缓存 加上该注解后方法做缓存 -->
	<aop:config> <aop:pointcut id="redisMethodCachePointcut" expression="@annotation(com.way.utils.redis.cache.RedisCache)" 
		/> <aop:advisor advice-ref="methodCacheInterceptor" pointcut-ref="redisMethodCachePointcut" 
		/> </aop:config>


</beans> 